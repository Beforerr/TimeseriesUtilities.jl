var documenterSearchIndex = {"docs":
[{"location":"#TimeseriesUtilities","page":"Home","title":"TimeseriesUtilities","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for TimeseriesUtilities.","category":"page"},{"location":"","page":"Home","title":"Home","text":"Most of the utilities operate on the time dimension by default, but you can specify other dimensions using the dim or query parameter.","category":"page"},{"location":"#TimeseriesUtilities.TimeseriesUtilities-index","page":"Home","title":"TimeseriesUtilities.TimeseriesUtilities","text":"TimeseriesUtilities\n\nA collection of utilities to simplify common time series analysis.\n\nFrom data cleaning to arithmetic operations (e.g. linear algebra) to common time series operations (e.g. resampling, filtering).\n\nData Cleaning\n\nfind_outliers, find_outliers_median, find_outliers_mean\nreplace_outliers, replace_outliers!\n\nQuery\n\ntimes, time_grid\ntimerange, common_timerange\n\n(Windowed) Statistics\n\ntstat\ntmean\ntmedian\ntsum\ntvar\ntstd\ntsem\n\nAlgebra\n\ntcross\ntdot\ntnorm\ntsproj, tproj, toproj\ntsubtract\ntderiv\n\nTime-Domain Operations\n\ntselect\ntclip, tclips\ntview\ntmask and tmask!\ntshift\ntsplit\ntgroupby\n\nTime-Frequency Domain Operations\n\ntfilter\n\n\n\n\n\n","category":"module"},{"location":"#Installation","page":"Home","title":"Installation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"using Pkg\nPkg.add(\"TimeseriesUtilities\")","category":"page"},{"location":"#API-Reference","page":"Home","title":"API Reference","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"#TimeseriesUtilities.TimeseriesUtilities","page":"Home","title":"TimeseriesUtilities.TimeseriesUtilities","text":"TimeseriesUtilities\n\nA collection of utilities to simplify common time series analysis.\n\nFrom data cleaning to arithmetic operations (e.g. linear algebra) to common time series operations (e.g. resampling, filtering).\n\nData Cleaning\n\nfind_outliers, find_outliers_median, find_outliers_mean\nreplace_outliers, replace_outliers!\n\nQuery\n\ntimes, time_grid\ntimerange, common_timerange\n\n(Windowed) Statistics\n\ntstat\ntmean\ntmedian\ntsum\ntvar\ntstd\ntsem\n\nAlgebra\n\ntcross\ntdot\ntnorm\ntsproj, tproj, toproj\ntsubtract\ntderiv\n\nTime-Domain Operations\n\ntselect\ntclip, tclips\ntview\ntmask and tmask!\ntshift\ntsplit\ntgroupby\n\nTime-Frequency Domain Operations\n\ntfilter\n\n\n\n\n\n","category":"module"},{"location":"#TimeseriesUtilities.DiffQ","page":"Home","title":"TimeseriesUtilities.DiffQ","text":"DiffQ(v, t; dim=1)\n\nDifference quotient of v with respect to t.\n\nTo avoid undefined behavior for division by Date/DateTime, we convert the time difference to a Unitful.Quantity if eltype(v) is not a Unitful.Quantity.\n\n\n\n\n\n","category":"type"},{"location":"#TimeseriesUtilities.common_timerange-Tuple{Any, Vararg{Any}}","page":"Home","title":"TimeseriesUtilities.common_timerange","text":"common_timerange(x1, xs...)\n\nGet the common time range (intersection) across multiple arrays. If there is no overlap, returns nothing.\n\n\n\n\n\n","category":"method"},{"location":"#TimeseriesUtilities.dimnum","page":"Home","title":"TimeseriesUtilities.dimnum","text":"dimnum(x, query)\n\nGet the number(s) of Dimension(s) as ordered in the dimensions of an object.\n\nExtend the function for custom type x. By default, we fall back to DimensionalData.dimnum.\n\n\n\n\n\n","category":"function"},{"location":"#TimeseriesUtilities.dropna-Tuple{Any}","page":"Home","title":"TimeseriesUtilities.dropna","text":"dropna(A; dim=nothing)\ndropna(A::AbstractDimArray; dim=nothing, query=nothing)\n\nRemove slices containing NaN values along along the dim dimension.\n\n\n\n\n\n","category":"method"},{"location":"#TimeseriesUtilities.find_outliers-Tuple{Any}","page":"Home","title":"TimeseriesUtilities.find_outliers","text":"find_outliers(A, [method, window]; dim = 1, kw...)\n\nFind outliers in data A along the specified dim dimension.\n\nReturns a Boolean array whose elements are true when an outlier is detected in the corresponding element of A.\n\nThe default method is :median (other option is :mean), which uses the median absolute deviation (MAD) to detect outliers. When the length of A is greater than 256, it uses a moving window of size 16.\n\nSee also: find_outliers_median, find_outliers_mean, isoutlier - MATLAB\n\n\n\n\n\n","category":"method"},{"location":"#TimeseriesUtilities.find_outliers_mean-Tuple{AbstractVector, Any}","page":"Home","title":"TimeseriesUtilities.find_outliers_mean","text":"find_outliers_mean(x::AbstractVector, window; threshold = 3)\n\nFind outliers that are defined as elements more than three standard deviations from the mean.\n\nThis method is faster but less robust than find_outliers_median.\n\n\n\n\n\n","category":"method"},{"location":"#TimeseriesUtilities.find_outliers_median-Tuple{AbstractVector, Any}","page":"Home","title":"TimeseriesUtilities.find_outliers_median","text":"find_outliers_median(x, window; threshold=3)\n\nFind outliers that are defined as elements more than threshold=3 times the scaled median absolute deviation (MAD) from the median.\n\nWhen window is set to a integer, a moving window of that size is used to compute local MAD. Otherwise, global statistics are used.\n\nReferences\n\nMedian absolute deviation - Wikipedia\n\n\n\n\n\n","category":"method"},{"location":"#TimeseriesUtilities.groupby_dynamic","page":"Home","title":"TimeseriesUtilities.groupby_dynamic","text":"Group x into windows based on every and period.\n\n\n\n\n\n","category":"function"},{"location":"#TimeseriesUtilities.interpolate_outliers!-Tuple{Any, Any, Any}","page":"Home","title":"TimeseriesUtilities.interpolate_outliers!","text":"interpolate_outliers!(x, t, outliers)\n\nInterpolate outliers in x using interpolation of neighboring non-outlier values.\n\n\n\n\n\n","category":"method"},{"location":"#TimeseriesUtilities.oproj-Tuple{Any, Any}","page":"Home","title":"TimeseriesUtilities.oproj","text":"Vector rejection\n\n\n\n\n\n","category":"method"},{"location":"#TimeseriesUtilities.proj-Tuple{Any, Any}","page":"Home","title":"TimeseriesUtilities.proj","text":"proj(a, b)\n\nVector projection of a vector a on (or onto) a nonzero vector b.\n\nReferences: Wikipedia\n\nSee also: sproj, oproj\n\n\n\n\n\n","category":"method"},{"location":"#TimeseriesUtilities.rectify-Tuple{Any}","page":"Home","title":"TimeseriesUtilities.rectify","text":"Rectify the time step of a DimArray to be uniform.\n\n\n\n\n\n","category":"method"},{"location":"#TimeseriesUtilities.replace_outliers!-Tuple{Any, Any, Vararg{Any}}","page":"Home","title":"TimeseriesUtilities.replace_outliers!","text":"replace_outliers!(A, s, [find_method, window]; kwargs...)\n\nFinds outliers in A and replaces them with s (by default: NaN).\n\nSee also: find_outliers, filloutliers - MATLAB\n\n\n\n\n\n","category":"method"},{"location":"#TimeseriesUtilities.replace_outliers!-Tuple{Any, Symbol, Vararg{Any}}","page":"Home","title":"TimeseriesUtilities.replace_outliers!","text":"replace_outliers!(A, method, [find_method, window]; kwargs...)\nreplace_outliers!(A, method, outliers; kwargs...)\n\nReplaces outliers in A with values determined by the specified method.\n\nOutliers can be detected using find_outliers with optional find_method and window parameters or specified directly as a Boolean array outliers.\n\nmethod can be one of the following:\n\n:linear: Linear interpolation of neighboring, nonoutlier values\n:previous: Previous nonoutlier value\n:next: Next nonoutlier value\n:nearest: Nearest nonoutlier value\n\nSee also: filloutliers - MATLAB\n\n\n\n\n\n","category":"method"},{"location":"#TimeseriesUtilities.replace_outliers-Tuple{Any, Vararg{Any}}","page":"Home","title":"TimeseriesUtilities.replace_outliers","text":"replace_outliers(A; args...; kw...)\n\nNon-mutable version of replace_outliers!.\n\n\n\n\n\n","category":"method"},{"location":"#TimeseriesUtilities.smooth-Tuple{Any, Any}","page":"Home","title":"TimeseriesUtilities.smooth","text":"smooth(da::AbstractDimArray, window; dim=Ti, suffix=\"_smoothed\", kwargs...)\n\nSmooths a time series by computing a moving average over a sliding window.\n\nThe size of the sliding window can be either:\n\nQuantity: A time duration that will be converted to number of samples based on data resolution\nInteger: Number of samples directly\n\nArguments\n\ndims=Ti: Dimension along which to perform smoothing (default: time dimension)\nsuffix=\"_smoothed\": Suffix to append to the variable name in output\nkwargs...: Additional arguments passed to RollingWindowArrays.rolling\n\n\n\n\n\n","category":"method"},{"location":"#TimeseriesUtilities.sproj-Tuple{Any, Any}","page":"Home","title":"TimeseriesUtilities.sproj","text":"Scalar projection\n\n\n\n\n\n","category":"method"},{"location":"#TimeseriesUtilities.tclip-Tuple{DimensionalData.AbstractDimArray, Any, Any}","page":"Home","title":"TimeseriesUtilities.tclip","text":"tclip(A, t0, t1; query=nothing, sort=false)\n\nClip a Dimension or DimArray A to a time range [t0, t1].\n\nFor unordered dimensions, the dimension should be sorted before clipping (see tsort).\n\n\n\n\n\n","category":"method"},{"location":"#TimeseriesUtilities.tclips-Union{NTuple{N, Any}, Tuple{N}} where N","page":"Home","title":"TimeseriesUtilities.tclips","text":"tclips(xs...; trange=common_timerange(xs...))\n\nClip multiple arrays to a common time range trange.\n\nIf trange is not provided, automatically finds the common time range across all input arrays.\n\n\n\n\n\n","category":"method"},{"location":"#TimeseriesUtilities.tcross-Tuple{Any, Any}","page":"Home","title":"TimeseriesUtilities.tcross","text":"tcross(x, y; dim = nothing, query=nothing)\n\nCompute the cross product of two (arrays of) vectors along the specified dimension dim or query.\n\nReferences:\n\nhttps://docs.xarray.dev/en/stable/generated/xarray.cross.html\n\n\n\n\n\n","category":"method"},{"location":"#TimeseriesUtilities.tderiv-Tuple","page":"Home","title":"TimeseriesUtilities.tderiv","text":"tderiv(A, times; dim=1)\ntderiv(A; dim = nothing, query = nothing)\n\nCompute the time derivative of A. Set lazy=true for lazy evaluation.\n\nSee also: deriv_data - PySPEDAS\n\n\n\n\n\n","category":"method"},{"location":"#TimeseriesUtilities.tdot-Tuple{Any, Any}","page":"Home","title":"TimeseriesUtilities.tdot","text":"tdot(x, y; dim=nothing, query=nothing)\n\nDot product of two arrays x and y along the dim dimension.\n\n\n\n\n\n","category":"method"},{"location":"#TimeseriesUtilities.tfilter","page":"Home","title":"TimeseriesUtilities.tfilter","text":"tfilter(da, Wn1, Wn2=samplingrate(da) / 2; designmethod=nothing)\n\nBy default, the max frequency corresponding to the Nyquist frequency is used.\n\nReferences\n\nhttps://docs.juliadsp.org/stable/filters/\nhttps://www.mathworks.com/help/signal/ref/filtfilt.html\nhttps://docs.scipy.org/doc/scipy/reference/generated/scipy.signal.filtfilt.html\n\nIssues\n\nDSP.jl and Unitful.jl: https://github.com/JuliaDSP/DSP.jl/issues/431\n\n\n\n\n\n","category":"function"},{"location":"#TimeseriesUtilities.tgroupby-Tuple{Any, Vararg{Any}}","page":"Home","title":"TimeseriesUtilities.tgroupby","text":"tgroupby(x, every, period = every, start_by = :window)\n\nGroup x into windows based on every and period.\n\n\n\n\n\n","category":"method"},{"location":"#TimeseriesUtilities.time_grid-Tuple{Any, Any}","page":"Home","title":"TimeseriesUtilities.time_grid","text":"time_grid(x, dt)\n\nCreate a time grid from the minimum to maximum time in x with the step size dt.\n\nExamples\n\n# Create hourly time grid\ntime_grid(x, Hour(1))\ntime_grid(x, 1u\"hr\")\n\n# Create 1-s intervals\ntime_grid(x, Second(1))\ntime_grid(x, 1u\"second\")\ntime_grid(x, 1u\"Hz\")\n\n\n\n\n\n","category":"method"},{"location":"#TimeseriesUtilities.timerange-Tuple{Any}","page":"Home","title":"TimeseriesUtilities.timerange","text":"timerange(times)\ntimerange(x1, xs...)\n\nGet the time range (minimum and maximum) of time series data.\n\nFor a single argument, returns a tuple (tmin, tmax) containing the minimum and maximum times. For multiple arguments, returns the common time range (intersection) across all arrays - equivalent to common_timerange(x1, xs...).\n\nExamples\n\n# Single time series\ntimes = [1, 2, 3, 4, 5]\ntimerange(times)  # (1, 5)\n\n# Multiple time series - find common range\nx1_times = [1, 2, 3, 4]\nx2_times = [2, 3, 4, 5]\ntimerange(x1_times, x2_times)  # (2, 4)\n\nSee also: common_timerange, tminimum, tmaximum\n\n\n\n\n\n","category":"method"},{"location":"#TimeseriesUtilities.times-Tuple{DimensionalData.AbstractDimArray, Vararg{Any}}","page":"Home","title":"TimeseriesUtilities.times","text":"Returns the time indices of x.\n\n\n\n\n\n","category":"method"},{"location":"#TimeseriesUtilities.tmask!-Tuple{Any, Any, Any}","page":"Home","title":"TimeseriesUtilities.tmask!","text":"tmask!(da, t0, t1)\ntmask!(da, it::Interval)\ntmask!(da, its)\n\nMask all data values within the specified time range(s) (t0, t1) / it / its with NaN.\n\n\n\n\n\n","category":"method"},{"location":"#TimeseriesUtilities.tmask-Tuple{Any, Vararg{Any}}","page":"Home","title":"TimeseriesUtilities.tmask","text":"tmask(da, args...; kwargs...)\n\nNon-mutable version of tmask!. See also tmask!.\n\n\n\n\n\n","category":"method"},{"location":"#TimeseriesUtilities.tmaximum","page":"Home","title":"TimeseriesUtilities.tmaximum","text":"tmaximum(x)\n\nGet the maximum timestamp of x.\n\n\n\n\n\n","category":"function"},{"location":"#TimeseriesUtilities.tmean-Tuple{Any, Vararg{Any}}","page":"Home","title":"TimeseriesUtilities.tmean","text":"tmean(x, [dt]; dim=nothing, query=nothing)\n\nCalculate the arithmetic mean of x along the dim dimension, optionally grouped by dt.\n\nIt returns a value if x is a vector along the dim dimension, otherwise returns a DimArray with the specified dimension dropped.\n\nIf dim is not specified, it defaults to the query dimension (dimension of type TimeDim by default).\n\n\n\n\n\n","category":"method"},{"location":"#TimeseriesUtilities.tmedian-Tuple{Any, Vararg{Any}}","page":"Home","title":"TimeseriesUtilities.tmedian","text":"tmedian(x, [dt]; dim=nothing, query=nothing)\n\nCalculate the median of x along the dim dimension, optionally grouped by dt.\n\nIt returns a value if x is a vector along the dim dimension, otherwise returns a DimArray with the specified dimension dropped.\n\nIf dim is not specified, it defaults to the query dimension (dimension of type TimeDim by default).\n\n\n\n\n\n","category":"method"},{"location":"#TimeseriesUtilities.tminimum","page":"Home","title":"TimeseriesUtilities.tminimum","text":"tminimum(x)\n\nGet the minimum timestamp of x.\n\n\n\n\n\n","category":"function"},{"location":"#TimeseriesUtilities.tnorm-Tuple{Any}","page":"Home","title":"TimeseriesUtilities.tnorm","text":"tnorm(A; dim=nothing, query=nothing)\n\nCompute the norm of each slice in A along the specified dimension dim or query.\n\nSee also: tnorm_combine\n\n\n\n\n\n","category":"method"},{"location":"#TimeseriesUtilities.tnorm_combine-Tuple{Any}","page":"Home","title":"TimeseriesUtilities.tnorm_combine","text":"tnorm_combine(x; dim=nothing, name=:magnitude)\n\nCalculate the norm of each slice along query dimension and combine it with the original components.\n\n\n\n\n\n","category":"method"},{"location":"#TimeseriesUtilities.toproj-Tuple{Any, Any}","page":"Home","title":"TimeseriesUtilities.toproj","text":"toproj(A, B; dim=nothing, query=nothing)\n\nCompute vector rejection (orthogonal projection) of array A from B along specified dimension dim or query.\n\n\n\n\n\n","category":"method"},{"location":"#TimeseriesUtilities.tproj-Tuple{Any, Any}","page":"Home","title":"TimeseriesUtilities.tproj","text":"tproj(A, B; dim=nothing, query=nothing)\n\nCompute vector projection of A onto B along specified dimension dim or query.\n\n\n\n\n\n","category":"method"},{"location":"#TimeseriesUtilities.tselect-Tuple{DimensionalData.AbstractDimArray, Any, Any}","page":"Home","title":"TimeseriesUtilities.tselect","text":"tselect(A, t, [δt]; query=nothing)\n\nSelect the value of A closest to time t within the time range [t-δt, t+δt].\n\nSimilar to DimensionalData.Dimensions.Lookups.At but choose the closest value and return missing if the time range is empty.\n\n\n\n\n\n","category":"method"},{"location":"#TimeseriesUtilities.tsem-Tuple{Any, Vararg{Any}}","page":"Home","title":"TimeseriesUtilities.tsem","text":"tsem(x, [dt]; dim=nothing, query=nothing)\n\nCalculate the standard error of the mean of x along the dim dimension, optionally grouped by dt.\n\nIt returns a value if x is a vector along the dim dimension, otherwise returns a DimArray with the specified dimension dropped.\n\nIf dim is not specified, it defaults to the query dimension (dimension of type TimeDim by default).\n\n\n\n\n\n","category":"method"},{"location":"#TimeseriesUtilities.tshift","page":"Home","title":"TimeseriesUtilities.tshift","text":"tshift(x; dim=TimeDim, t0=nothing, new_dim=nothing)\n\nShift the dim of x by t0.\n\n\n\n\n\n","category":"function"},{"location":"#TimeseriesUtilities.tsort-Tuple{Any}","page":"Home","title":"TimeseriesUtilities.tsort","text":"tsort(A; query=nothing, rev=false)\n\nSort a DimArray A along the query dimension.\n\n\n\n\n\n","category":"method"},{"location":"#TimeseriesUtilities.tsplit","page":"Home","title":"TimeseriesUtilities.tsplit","text":"tsplit(da::AbstractDimArray, dim=Ti)\n\nSplits up data along dimension dim.\n\n\n\n\n\n","category":"function"},{"location":"#TimeseriesUtilities.tsproj-Tuple{Any, Any}","page":"Home","title":"TimeseriesUtilities.tsproj","text":"tsproj(A, B; dim=nothing, query=nothing)\n\nCompute scalar projection of A onto B along specified dimension dim or query.\n\n\n\n\n\n","category":"method"},{"location":"#TimeseriesUtilities.tstat","page":"Home","title":"TimeseriesUtilities.tstat","text":"tstat(f, x, [dt]; dim = nothing)\n\nCalculate the statistic f of x along the dim dimension, optionally grouped by dt.\n\nSee also: groupby_dynamic\n\n\n\n\n\n","category":"function"},{"location":"#TimeseriesUtilities.tstd-Tuple{Any, Vararg{Any}}","page":"Home","title":"TimeseriesUtilities.tstd","text":"tstd(x, [dt]; dim=nothing, query=nothing)\n\nCalculate the standard deviation of x along the dim dimension, optionally grouped by dt.\n\nIt returns a value if x is a vector along the dim dimension, otherwise returns a DimArray with the specified dimension dropped.\n\nIf dim is not specified, it defaults to the query dimension (dimension of type TimeDim by default).\n\n\n\n\n\n","category":"method"},{"location":"#TimeseriesUtilities.tsubtract","page":"Home","title":"TimeseriesUtilities.tsubtract","text":"tsubtract(x, f=nanmedian; dims=timedim(x))\n\nSubtract a statistic (default function f: nanmedian) along dimensions (default: time dimension) from x.\n\n\n\n\n\n","category":"function"},{"location":"#TimeseriesUtilities.tsum-Tuple{Any, Vararg{Any}}","page":"Home","title":"TimeseriesUtilities.tsum","text":"tsum(x, [dt]; dim=nothing, query=nothing)\n\nCalculate the sum of x along the dim dimension, optionally grouped by dt.\n\nIt returns a value if x is a vector along the dim dimension, otherwise returns a DimArray with the specified dimension dropped.\n\nIf dim is not specified, it defaults to the query dimension (dimension of type TimeDim by default).\n\n\n\n\n\n","category":"method"},{"location":"#TimeseriesUtilities.tvar-Tuple{Any, Vararg{Any}}","page":"Home","title":"TimeseriesUtilities.tvar","text":"tvar(x, [dt]; dim=nothing, query=nothing)\n\nCalculate the variance of x along the dim dimension, optionally grouped by dt.\n\nIt returns a value if x is a vector along the dim dimension, otherwise returns a DimArray with the specified dimension dropped.\n\nIf dim is not specified, it defaults to the query dimension (dimension of type TimeDim by default).\n\n\n\n\n\n","category":"method"},{"location":"#TimeseriesUtilities.tview-Tuple{Any, Any, Any}","page":"Home","title":"TimeseriesUtilities.tview","text":"tview(d, t0, t1)\n\nView a dimension or DimArray in time range [t0, t1].\n\n\n\n\n\n","category":"method"},{"location":"#TimeseriesUtilities.unwrap-Tuple{Any}","page":"Home","title":"TimeseriesUtilities.unwrap","text":"unwrap(x)\n\nReturn the innermost object of the wrapped object x with similar behavior as x (e.g. same size, same type, etc.)\n\n\n\n\n\n","category":"method"},{"location":"#TimeseriesUtilities.window_bf_sizes-Tuple{Integer}","page":"Home","title":"TimeseriesUtilities.window_bf_sizes","text":"window_bf_sizes(window)\n\nConverts a window specification to backward and forward window sizes.\n\nWhen window is a positive integer scalar, the window is centered about the current element and contains window-1 neighboring elements. If window is even, then the window is centered about the current and previous elements.\n\n\n\n\n\n","category":"method"},{"location":"outliers/#Remove-spikes-from-signal","page":"Remove spikes from signal","title":"Remove spikes from signal","text":"","category":"section"},{"location":"outliers/","page":"Remove spikes from signal","title":"Remove spikes from signal","text":"The example data is a sine wave with random spikes.","category":"page"},{"location":"outliers/","page":"Remove spikes from signal","title":"Remove spikes from signal","text":"using Random\n\n\"\"\"\n    create_sample_data()\n\nCreate a sine wave and add random positive and negative spikes.\nReturns a DataFrame with columns: `x`, `y`, `rand`, `spike_high`, `spike_low`, and `y_spikey`.\n\"\"\"\nfunction create_sample_data(; length=1000)\n    # Create x values and compute sine wave y values\n    x = range(0, stop=2π, length=length)\n    y = 2 .* sin.(x)\n\n    rands = rand(Xoshiro(1), length)\n\n    # random values above this trigger a spike:\n    RAND_HIGH = 0.98\n    # random values below this trigger a negative spike:\n    RAND_LOW = 0.02\n\n    # amplitude of the spikes:\n    spike_amplitudes =  0.1 .+ 10rand(Xoshiro(2), length)\n\n    # Create random spikes based on threshold conditions\n    spike_high = ifelse.(rands .> RAND_HIGH, 1, 0) .* spike_amplitudes\n    spike_low  = ifelse.(rands .< RAND_LOW, -1, 0) .* spike_amplitudes\n    n_spikes = sum(spike_high .!= 0) + sum(spike_low .!= 0)\n\n    y .+ spike_high .+ spike_low, n_spikes\nend\ny_spikey, n_spikes = create_sample_data()","category":"page"},{"location":"outliers/","page":"Remove spikes from signal","title":"Remove spikes from signal","text":"By default, replace_outliers uses a threshold-detection approach based on the median absolute deviation (MAD) to detect spikes. It is also possible to use a filter-based approach (i.e. low-pass filtering).","category":"page"},{"location":"outliers/","page":"Remove spikes from signal","title":"Remove spikes from signal","text":"using TimeseriesUtilities\nusing CairoMakie\nusing Test\n\ny_remove_outliers = replace_outliers(y_spikey)\nn_removed = sum(isnan.(y_remove_outliers))\n@test n_removed == n_spikes\n\nbegin\n    f = Figure()\n    lines(f[1,1],y_spikey)\n    lines(f[2,1],y_remove_outliers)\n    f\nend","category":"page"},{"location":"outliers/#TimeseriesUtilities.find_outliers","page":"Remove spikes from signal","title":"TimeseriesUtilities.find_outliers","text":"find_outliers(A, [method, window]; dim = 1, kw...)\n\nFind outliers in data A along the specified dim dimension.\n\nReturns a Boolean array whose elements are true when an outlier is detected in the corresponding element of A.\n\nThe default method is :median (other option is :mean), which uses the median absolute deviation (MAD) to detect outliers. When the length of A is greater than 256, it uses a moving window of size 16.\n\nSee also: find_outliers_median, find_outliers_mean, isoutlier - MATLAB\n\n\n\n\n\n","category":"function"},{"location":"outliers/#TimeseriesUtilities.replace_outliers!","page":"Remove spikes from signal","title":"TimeseriesUtilities.replace_outliers!","text":"replace_outliers!(A, s, [find_method, window]; kwargs...)\n\nFinds outliers in A and replaces them with s (by default: NaN).\n\nSee also: find_outliers, filloutliers - MATLAB\n\n\n\n\n\nreplace_outliers!(A, method, [find_method, window]; kwargs...)\nreplace_outliers!(A, method, outliers; kwargs...)\n\nReplaces outliers in A with values determined by the specified method.\n\nOutliers can be detected using find_outliers with optional find_method and window parameters or specified directly as a Boolean array outliers.\n\nmethod can be one of the following:\n\n:linear: Linear interpolation of neighboring, nonoutlier values\n:previous: Previous nonoutlier value\n:next: Next nonoutlier value\n:nearest: Nearest nonoutlier value\n\nSee also: filloutliers - MATLAB\n\n\n\n\n\n","category":"function"},{"location":"outliers/#TimeseriesUtilities.replace_outliers","page":"Remove spikes from signal","title":"TimeseriesUtilities.replace_outliers","text":"replace_outliers(A; args...; kw...)\n\nNon-mutable version of replace_outliers!.\n\n\n\n\n\n","category":"function"}]
}
